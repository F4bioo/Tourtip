name: Check Quality

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - develop

jobs:
  check-static-analysis:
    name: Check Static Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant Gradlew Permission
        run: chmod +x gradlew

      - name: Run Lint
        run: ./gradlew lintDebug

  check-tests:
    name: Check Tests
    runs-on: ubuntu-latest
    needs: check-static-analysis
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant Gradlew Permission
        run: chmod +x gradlew

      - name: Run Tests
        run: ./gradlew testDebugUnitTest

  check_job_flag:
    needs: check-tests
    name: Check Job Flag
    runs-on: ubuntu-latest
    steps:
      - name: Should Run Android Tests
        run: |
          echo "Current Job Flag value is: ${{ vars.SHOULD_RUN_ANDROID_TESTS }}"    

  check-android-tests:
    needs: check_job_flag
    if: ${{ vars.SHOULD_RUN_ANDROID_TESTS == 'true' }}
    name: Check Android Tests
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant Gradlew Permission
        run: chmod +x gradlew

      - name: Create AVD and Generate Snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: ReactiveCircus/android-emulator-runner@v2.28.0
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: echo "Generated AVD snapshot for caching."

      - name: Run Android Tests
        uses: ReactiveCircus/android-emulator-runner@v2.28.0
        with:
          api-level: 29
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: ./gradlew connectedDebugAndroidTest
