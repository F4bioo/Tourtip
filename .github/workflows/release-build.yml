name: Release Plugin

on:
  push:
    branches:
      - master

jobs:
  check-actor:
    name: Check Actor
    runs-on: ubuntu-latest
    steps:
      - name: Check Authorized User
        run: |
          if [[ "${{ github.actor }}" != "F4bioo" ]]; then
            echo "Unauthorized user. Exiting."
            exit 1
          fi

  build-and-release-plugin:
    needs: check-actor
    name: Build and Release Plugin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant Gradlew Permission
        run: chmod +x gradlew

      - name: Read Gradle Version
        id: gradle_version
        run: |
          VERSION=$(grep 'version = ' build.gradle.kts | sed 's/.*"\(.*\)".*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Plugin
        run: ./gradlew buildPlugin

      - name: Create Release Notes
        run: |
          set -e
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null) || true
          IGNORED_SUFFIXES=$(awk 'NF && $0 !~ /^ *$/ { $1=$1; print }' .github/markdown/release-build-ignore-suffixes.md | awk 'BEGIN { ORS = "|" } { print }' | sed 's/|$//')
          if [ -z "$LAST_TAG" ]; then
            RELEASE_NOTES="- Initial Release: We're Live! ðŸŽˆ"
          else
            git log ${LAST_TAG}..HEAD --pretty=format:"- %s %b" --abbrev-commit | grep -v -E "^- (${IGNORED_SUFFIXES}):" > TEMP_RELEASE_NOTES.md
            RELEASE_NOTES=$(cat TEMP_RELEASE_NOTES.md)
          fi
          export RELEASE_NOTES
          envsubst < .github/markdown/release-build-message.md > FINAL_RELEASE_NOTES.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: v${{ env.VERSION }}
          body_path: FINAL_RELEASE_NOTES.md
          draft: false
          prerelease: false

      - name: Upload Plugin Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/distributions/DiffLinesCounter-${{ env.VERSION }}.zip
          asset_name: DiffLinesCounter-${{ env.VERSION }}.zip
          asset_content_type: application/zip
